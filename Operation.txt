import java.util.Scanner;

public class Operation {
	
	int n=0,s=0;
	
	public static int[] create()
	{
		int arr[];
	
		Scanner sc=new Scanner(System.in); 
		System.out.println("\n enter the number for matrix ");
		arr=new int[sc.nextInt()];
		
		System.out.println("\n enter numbers are :");
		
		for(int i=0;i<arr.length;i++)
		{
			arr[i]=sc.nextInt();
		}
		return arr;
	}
	
	static void display(int a[])
	{
		for(int i:a)
		{
			System.out.println(i);
		}
	}
	
	static boolean search(int s,int n,int arr[])
	{
		
		boolean b;
		b=false;
		for(int i=0;i<arr.length;i++)
		{
			if(arr[i]==s)
			{
				b=true;
				break;
			}
		}
		return b;
	}
	
	static boolean linear (int s,int n,int arr[])
	{
		//int flag =0;
		boolean flag;
		flag=false;
		for(int i=0;i<arr.length;i++)
		{
			if(arr[i]==s)
			{
				flag=true;
				break;
			}
		}
		return flag;
		
	}
	
	static boolean binary(int n,int s,int arr[])
	{
		boolean p1;
		p1=false;
		int up=0,lb=n-1,mid=0;
		mid=(up+lb)/2;
		while(up<=lb)
		{
			if(arr[mid]==n)
			{
				System.out.println(+n+"found at ");
				break;
			}
			else if(arr[mid]<n)
			{
				lb=mid+1;
				mid=(lb+up)/2;
			}
			else if(arr[mid]>n)
			{
				up=mid-1;
				mid=(lb+up)/2;
			}
					
		}
		if(lb>up)
		{
			System.out.println("element are found ");
		}
		return p1;
	}
	
	static int insert(int n,int pos,int arr[],int elm)
	{
		int i;
		for( i=n-1;i>=pos-1;i--)
		{
			arr[i+1]=arr[i];
		}
		arr[i+1]=elm;
		i++;
		System.out.println("\n new element in array is :"+n);
		return n;
	}
	
	static boolean delete(int n,int pos,int arr[])
	{
		boolean b1;
		b1=false;
		int elm=arr[pos-1];
		
		for(int i=0;i<pos-1;i++)
		{
			arr[i]=arr[i+1];
		}
		n--;
		System.out.println(elm+ " is deleted");
		return b1;
	}
	
	/*static int[] sort(int n,int arr[])
	{
		int temp;
		for(int i=0;i<arr.length;i++)
		{
			for(int j=0;j<arr.length;j++)
			{
				if(arr[i]>arr[j])
				{
					temp=arr[i];
					arr[i]=arr[j];
					arr[j]=temp;
				}
			}
		}
		return arr;
	}*/
	
	static int[] insertion_sort(int arr[],int n,int s)
	{
		int temp,j;
		for(int i=1;i<n;i++)
		{
			temp=arr[i];
			j=i-1;
			while(temp<arr[j] && (j>0))
			{
				arr[j+1]=arr[j];
				j--;
			}
			arr[j+1]=temp;
		}
		System.out.println("\n The insertion sort is "+arr);
		return arr;
		
	}
	
	static int[] selection_sort(int arr[],int n,int s)
	{
		int min,temp;
		for(int i=0;i<n-1;i++)
		{
			min=i;
			for(int j=i+1;j<n;j++)
			{
				if(arr[min]>arr[j])
				{
					min=j;
				}
			}
			temp=arr[min];
			arr[min]=arr[i];
			arr[i]=temp;
		}
		System.out.println("\n The selection sort is "+arr);
		return arr;
	}
	
	static int[] bubble_sort(int arr[],int n,int s)
	{
		int temp;
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<n-1;j++)
			{
				if(arr[j]>arr[j+1])
				{
					temp=arr[j];
					arr[i]=arr[j+1];
					arr[i]=temp;
				}
			}
		}
		System.out.println("\n The bubble sort is "+arr);
		return arr;
	}

}
